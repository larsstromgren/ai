Sub ExportEmailsToExcel_Standalone()
    Dim OutApp As Outlook.Application
    Dim OutNamespace As Outlook.Namespace
    Dim Inbox As Outlook.MAPIFolder
    Dim cutDate As Date
    Dim emailData As Collection
    Dim ExcelApp As Object
    Dim wb As Object
    Dim ws As Object
    Dim FilePath As String

    ' Initiera Outlook
    On Error Resume Next
    Set OutApp = GetObject(, "Outlook.Application")
    If Err.Number <> 0 Then Set OutApp = New Outlook.Application
    On Error GoTo 0

    Set OutNamespace = OutApp.GetNamespace("MAPI")
    Set Inbox = OutNamespace.GetDefaultFolder(olFolderInbox)
    cutDate = DateValue("2022-09-01") ' <-- Ändra detta datum vid behov

    ' Samla e-postdata
    Set emailData = New Collection
    Call ProcessFolder(Inbox, emailData, cutDate)

    ' Starta Excel via automation
    Set ExcelApp = CreateObject("Excel.Application")
    ExcelApp.Visible = True
    Set wb = ExcelApp.Workbooks.Add
    Set ws = wb.Sheets(1)

    ' Skriv rubriker
    ws.Range("A1:F1").Value = Array("Mottagningstid", "Avsändarens namn", "Avsändarens e-post", "Mapp", "Ämne", "Meddelande")

    ' Skriv datan
    If emailData.Count > 0 Then
        Dim outputArr() As Variant
        Dim i As Long
        ReDim outputArr(1 To emailData.Count, 1 To 6)

        For i = 1 To emailData.Count
            Dim rowData As Variant
            rowData = emailData(i)
            outputArr(i, 1) = rowData(0)
            outputArr(i, 2) = rowData(1)
            outputArr(i, 3) = rowData(2)
            outputArr(i, 4) = rowData(3)
            outputArr(i, 5) = rowData(4)
            outputArr(i, 6) = rowData(5)
        Next i

        ws.Range("A2").Resize(emailData.Count, 6).Value = outputArr
    End If

    ' Spara fil
    FilePath = CreateObject("WScript.Shell").SpecialFolders("Desktop") & "\Outlook_Export_" & Format(Now, "yyyymmdd_hhmmss") & ".xlsx"
    wb.SaveAs FilePath, 51 ' xlOpenXMLWorkbook = 51

    MsgBox "Exporten är klar!" & vbCrLf & "Fil sparad på skrivbordet:" & vbCrLf & FilePath, vbInformation
End Sub

' ProcessFolder + Hjälpfunktioner som innan:

Sub ProcessFolder(ByVal Folder As Outlook.MAPIFolder, ByRef emailData As Collection, ByVal cutDate As Date)
    Dim Items As Outlook.Items
    Dim FilteredItems As Outlook.Items
    Dim i As Integer
    Dim OutMail As Outlook.MailItem
    Dim SubFolder As Outlook.MAPIFolder

    Set Items = Folder.Items
    Items.Sort "[ReceivedTime]", True
    Set FilteredItems = Items.Restrict("[ReceivedTime] >= '" & Format(cutDate, "MM/DD/YYYY") & "'")

    For i = 1 To FilteredItems.Count
        If TypeName(FilteredItems(i)) = "MailItem" Then
            Set OutMail = FilteredItems(i)
            Dim rowData(5) As Variant
            rowData(0) = OutMail.ReceivedTime
            rowData(1) = CleanText(OutMail.SenderName)
            rowData(2) = GetSenderEmail(OutMail)
            rowData(3) = GetFolderPath(Folder)
            rowData(4) = CleanText(OutMail.Subject)
            rowData(5) = OutMail.Body
            emailData.Add rowData
        End If
    Next i

    For Each SubFolder In Folder.Folders
        Call ProcessFolder(SubFolder, emailData, cutDate)
    Next SubFolder
End Sub

Function GetSenderEmail(OutMail As Outlook.MailItem) As String
    Dim AddressEntry As Outlook.AddressEntry
    Dim ExchangeUser As Outlook.ExchangeUser

    On Error Resume Next
    Set AddressEntry = OutMail.Sender
    If Not AddressEntry Is Nothing Then
        Select Case AddressEntry.AddressEntryUserType
            Case olExchangeUserAddressEntry, olExchangeRemoteUserAddressEntry
                Set ExchangeUser = AddressEntry.GetExchangeUser
                If Not ExchangeUser Is Nothing Then
                    GetSenderEmail = ExchangeUser.PrimarySmtpAddress
                Else
                    GetSenderEmail = "Okänd"
                End If
            Case Else
                GetSenderEmail = AddressEntry.Address
        End Select
    Else
        GetSenderEmail = "Okänd"
    End If
    On Error GoTo 0
End Function

Function GetFolderPath(ByVal Folder As Outlook.MAPIFolder) As String
    Dim parts As Collection
    Set parts = New Collection

    Do While Not Folder Is Nothing
        parts.Add Folder.Name
        Set Folder = Folder.Parent
        If TypeName(Folder) = "NameSpace" Then Exit Do
    Loop

    Dim i As Long, pathStr As String
    For i = parts.Count To 1 Step -1
        pathStr = pathStr & parts(i)
        If i > 1 Then pathStr = pathStr & "\"
    Next i

    GetFolderPath = pathStr
End Function

Function CleanText(ByVal txt As String) As String
    txt = Replace(txt, vbCr, " ")
    txt = Replace(txt, vbLf, " ")
    txt = Replace(txt, vbTab, " ")
    CleanText = Trim(txt)
End Function
